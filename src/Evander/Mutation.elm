-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Evander.Mutation exposing (..)

import Evander.InputObject
import Evander.Interface
import Evander.Object
import Evander.Scalar
import Evander.ScalarCodecs
import Evander.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CreatePaymentRequiredArguments =
    { payment : Evander.InputObject.CreatePayment }


createPayment :
    CreatePaymentRequiredArguments
    -> SelectionSet decodesTo Evander.Object.Payment
    -> SelectionSet decodesTo RootMutation
createPayment requiredArgs____ object____ =
    Object.selectionForCompositeField "createPayment" [ Argument.required "payment" requiredArgs____.payment Evander.InputObject.encodeCreatePayment ] object____ Basics.identity
