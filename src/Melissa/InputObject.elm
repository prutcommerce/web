-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Melissa.InputObject exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Melissa.Interface
import Melissa.Object
import Melissa.Scalar
import Melissa.ScalarCodecs
import Melissa.Union


buildCreateOrder :
    CreateOrderRequiredFields
    -> CreateOrder
buildCreateOrder required____ =
    { productId = required____.productId, quantity = required____.quantity }


type alias CreateOrderRequiredFields =
    { productId : Melissa.ScalarCodecs.Id
    , quantity : Int
    }


{-| Type for the CreateOrder input object.
-}
type alias CreateOrder =
    { productId : Melissa.ScalarCodecs.Id
    , quantity : Int
    }


{-| Encode a CreateOrder into a value that can be used as an argument.
-}
encodeCreateOrder : CreateOrder -> Value
encodeCreateOrder input____ =
    Encode.maybeObject
        [ ( "productId", (Melissa.ScalarCodecs.codecs |> Melissa.Scalar.unwrapEncoder .codecId) input____.productId |> Just ), ( "quantity", Encode.int input____.quantity |> Just ) ]
